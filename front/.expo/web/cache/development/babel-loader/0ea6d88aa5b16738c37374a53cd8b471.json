{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/fabricio/Escritorio/globantProject/front/screens/screenLoad/screenLoad.jsx\";\n\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport Header from \"../../shared/Header\";\nimport styles from \"./screenLoadStyle\";\nvar AnimatedText = Animated.createAnimatedComponent(Text);\n\nvar ScreenLoad = function ScreenLoad(_ref) {\n  var navigation = _ref.navigation;\n  console.log(navigation);\n\n  var _Dimensions$get = Dimensions.get(\"window\"),\n      height = _Dimensions$get.height;\n\n  var _useState = useState(new Animated.Value(0)),\n      _useState2 = _slicedToArray(_useState, 2),\n      animateY = _useState2[0],\n      setAnimateY = _useState2[1];\n\n  var _useState3 = useState(new Animated.Value(0)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      animateYwelcome = _useState4[0],\n      setAnimateYwelcome = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      animated = _useState6[0],\n      setAnimated = _useState6[1];\n\n  useEffect(function () {\n    if (!animated) {\n      Animated.timing(animateY, {\n        toValue: height / 2,\n        duration: 3000\n      }).start();\n      Animated.timing(animateYwelcome, {\n        toValue: height / 2 - 15,\n        duration: 3000\n      }).start();\n    }\n\n    setAnimated(true);\n    setTimeout(function () {\n      navigation.navigate('Mi perfil');\n    }, 9000);\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(LinearGradient, {\n    colors: [\"#ffc78f\", '#ff9c38'],\n    style: styles.background,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), React.createElement(AnimatedText, {\n    style: {\n      top: animateY,\n      position: \"absolute\",\n      fontSize: 50,\n      fontStyle: \"italic\",\n      fontWeight: \"bold\",\n      color: \"white\",\n      right: 70\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"ME\"), React.createElement(AnimatedText, {\n    style: {\n      bottom: animateYwelcome,\n      position: \"absolute\",\n      fontSize: 50,\n      fontStyle: \"italic\",\n      fontWeight: \"bold\",\n      color: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"MENTOR\"), React.createElement(LinearGradient, {\n    colors: ['#ff9c38', '#663300'],\n    style: styles.bottomBackground,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default ScreenLoad;","map":{"version":3,"sources":["/home/fabricio/Escritorio/globantProject/front/screens/screenLoad/screenLoad.jsx"],"names":["StatusBar","React","useState","useEffect","LinearGradient","Header","styles","AnimatedText","Animated","createAnimatedComponent","Text","ScreenLoad","navigation","console","log","Dimensions","get","height","Value","animateY","setAnimateY","animateYwelcome","setAnimateYwelcome","animated","setAnimated","timing","toValue","duration","start","setTimeout","navigate","container","background","top","position","fontSize","fontStyle","fontWeight","color","right","bottom","bottomBackground"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect } from \"react\";\nimport { StyleSheet, View, Text, Animated, Dimensions } from \"react-native\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport Header from \"../../shared/Header\"\nimport styles from \"./screenLoadStyle\"\n\nconst AnimatedText = Animated.createAnimatedComponent(Text);\n\nconst ScreenLoad = ({navigation}) => {\n    console.log(navigation)\n    const { height } = Dimensions.get(\"window\");\n\n    const [animateY, setAnimateY] = useState(new Animated.Value(0));\n    const [animateYwelcome, setAnimateYwelcome] = useState(new Animated.Value(0));\n    const [animated, setAnimated] = useState(false);\n\n    useEffect(() => {\n        if (!animated) {\n        Animated.timing(animateY, {\n            toValue: height / 2,\n            duration: 3000,\n        }).start();\n\n        Animated.timing(animateYwelcome, {\n            toValue: height / 2 - 15,\n            duration: 3000,\n        }).start();\n        }\n\n        setAnimated(true);\n        setTimeout(function(){ navigation.navigate('Mi perfil')}, 9000);\n        \n    }, []);\n    return (\n        <View style={styles.container}>\n            <LinearGradient\n        // Background Linear Gradient\n        colors={[\"#ffc78f\", '#ff9c38']}\n        style={styles.background}\n      />\n        <AnimatedText\n            style={{\n            top: animateY,\n            position: \"absolute\",\n            fontSize: 50,\n            fontStyle: \"italic\",\n            fontWeight: \"bold\",\n            color: \"white\",\n            right: 70\n            }}\n        >\n            ME \n        </AnimatedText>\n\n        \n        <AnimatedText\n            style={{\n            bottom: animateYwelcome,\n            position: \"absolute\",\n            fontSize: 50,\n            fontStyle: \"italic\",\n            fontWeight: \"bold\",\n            color: \"white\",\n            }}\n        >\n            MENTOR\n        </AnimatedText>\n      \n        <LinearGradient\n        // Background Linear Gradient\n        colors={['#ff9c38','#663300']}\n        style={styles.bottomBackground}\n      />\n\n        <StatusBar style=\"auto\" />\n        </View>\n    );\n    }\n\n\n\nexport default ScreenLoad"]},"metadata":{},"sourceType":"module"}